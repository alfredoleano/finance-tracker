{"ast":null,"code":"var _jsxFileName = \"/Users/alfredoleano/Desktop/Projects/finance-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getCategories, createCategory, updateCategory, deleteCategoryById } from './api';\nimport './App.css';\nimport CircularMeter from './CircularMeter';\nimport Modal from './Modal';\nimport AddCategoryModal from './AddCategoryModal';\nimport EditCategoryModal from './EditCategoryModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to manage the visibility of the add category modal\n  const [showAddCategoryModal, setShowAddCategoryModal] = useState(false);\n\n  // State to manage the list of categories\n  const [categories, setCategories] = useState([]);\n\n  // State to manage the visibility of the add amount modal\n  const [showAddModal, setShowAddModal] = useState(false);\n\n  // State to manage the visibility of the subtract amount modal\n  const [showSubtractModal, setShowSubtractModal] = useState(false);\n\n  // State to manage the visibility of the edit modal\n  const [showEditModal, setShowEditModal] = useState(false);\n\n  // State to keep track of the current category id when adding an amount\n  const [currentCategoryId, setCurrentCategoryId] = useState(null);\n\n  // State to keep track of total value\n  const [totalMaxValue, setTotalMaxValue] = useState(0);\n\n  // State to keep track of value\n  const [totalValue, setTotalValue] = useState(0);\n\n  // Get data from database and set it into categories\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const data = await getCategories();\n        setCategories(data);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  // Calculate the new total values when categories is updated\n  useEffect(() => {\n    // Calculating new value\n    const newValues = categories.reduce((accumulator, category) => {\n      return accumulator + category.value;\n    }, 0);\n    setTotalValue(newValues);\n\n    // Calculating new total value\n    const newTotal = categories.reduce((accumulator, category) => {\n      return accumulator + category.maxValue;\n    }, 0);\n    setTotalMaxValue(newTotal);\n  }, [categories]);\n\n  // Function to open the add category modal\n  const handleOpenAddCategoryModal = () => {\n    setShowAddCategoryModal(true);\n  };\n\n  // Function to close the add category modal\n  const handleCloseAddCategoryModal = () => {\n    setShowAddCategoryModal(false);\n  };\n\n  // Function to add a new category\n  const addCategory = async (name, maxValue) => {\n    try {\n      // Create a new category object (id is not included bc that is generated in the backend)\n      const newCategory = {\n        name,\n        value: 0,\n        maxValue\n      };\n\n      // Send the request to create a new category in the backend\n      const data = await createCategory(newCategory);\n\n      // Update the local categories state with the new category\n      setCategories([...categories, data]);\n\n      // Close the add category modal\n      handleCloseAddCategoryModal();\n    } catch (error) {\n      // Handle any errors that occurred during the API call\n      console.error('Error adding category:', error);\n    }\n  };\n\n  // Function to open the add amount modal\n  const handleOpenAddModal = id => {\n    setShowAddModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the add amount modal\n  const handleCloseAddModal = () => {\n    setShowAddModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to open the subtract amount modal\n  const handleOpenSubtractModal = id => {\n    setShowSubtractModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the subtract amount modal\n  const handleCloseSubtractModal = () => {\n    setShowSubtractModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to open the edit amount modal\n  const handleOpenEditModal = id => {\n    setShowEditModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the edit amount modal\n  const handleCloseEditModal = () => {\n    setShowEditModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to edit amount in category budget\n  const editAmount = async (id, addValue) => {\n    try {\n      // Find the category to be updated\n      const category = categories.find(category => category.id === id);\n\n      // Create a new object with the updated value\n      const updatedCategory = {\n        ...category,\n        value: category.value + addValue\n      };\n\n      // Call the API function to update the category in the backend\n      const data = await updateCategory(id, updatedCategory);\n\n      // Update the categories state with the response data\n      setCategories(categories.map(category => category.id === id ? data : category));\n\n      // Close the modals\n      handleCloseAddModal();\n      handleCloseSubtractModal();\n    } catch (error) {\n      console.error('Error updating category:', error);\n    }\n  };\n\n  // Function to delete a category\n  const deleteCategory = async id => {\n    try {\n      // Call the API to delete the category in the backend\n      await deleteCategoryById(id);\n\n      // Delete the category with the matching id in the categories state\n      setCategories(categories.filter(category => category.id !== id));\n\n      // Close edit modal\n      handleCloseEditModal();\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  };\n\n  // Function to change all the values of a category\n  const changeValues = async (id, limit, value) => {\n    try {\n      // Find the category by id\n      const category = categories.find(category => category.id === id);\n\n      // Create the updated category object\n      const updatedCategory = {\n        ...category,\n        value: value,\n        maxValue: limit\n      };\n\n      // Send the updated category to the backend\n      await updateCategory(id, updatedCategory);\n\n      // Update the categories state, replaces the category with the updated values if the id matches\n      setCategories(categories.map(category => category.id === id ? updatedCategory : category));\n\n      // Close the edit modal\n      handleCloseEditModal();\n    } catch (error) {\n      console.error('Error changing values:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conscience Spending Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CircularMeter, {\n          value: totalValue,\n          maxValue: totalMaxValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalValue, \" / \", totalMaxValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CircularMeter, {\n          value: category.value,\n          maxValue: category.maxValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", category.value, \" / \", category.maxValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plus-minus\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleOpenSubtractModal(category.id),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleOpenAddModal(category.id),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-edit\",\n            onClick: () => handleOpenEditModal(category.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenAddCategoryModal,\n      className: \"add-category\",\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCategoryModal, {\n      show: handleOpenAddCategoryModal,\n      handleClose: handleCloseAddCategoryModal,\n      addCategory: addCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditCategoryModal, {\n      show: handleOpenEditModal,\n      handleClose: handleCloseEditModal,\n      changeValues: changeValues,\n      deleteCategory: deleteCategory,\n      currentCategoryId: currentCategoryId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAddModal,\n      handleClose: handleCloseAddModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          const addValue = parseFloat(e.target.addValue.value); // Get the value to add\n          editAmount(currentCategoryId, addValue);\n          e.target.reset();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"addValue\",\n              min: \"0.01\",\n              max: \"100000\",\n              step: \"0.01\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-btns\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showSubtractModal,\n      handleClose: handleCloseSubtractModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Subtract Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          const subtractValue = parseFloat(e.target.subtractValue.value) * -1; // Get the value to add\n          editAmount(currentCategoryId, subtractValue);\n          e.target.reset();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"subtractValue\",\n              min: \"0.01\",\n              max: \"100000\",\n              step: \"0.01\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-btns\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Subtract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showEditModal,\n      handleClose: handleCloseEditModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          const value = parseFloat(e.target.value.value);\n          const limit = parseFloat(e.target.limit.value);\n          changeValues(currentCategoryId, limit, value);\n          e.target.reset();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Budget Limit:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"limit\",\n              min: \"1\",\n              max: \"100000\",\n              step: \"0.01\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Budget Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"value\",\n              min: \"0.01\",\n              max: \"100000\",\n              step: \"0.01\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Confirm Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => deleteCategory(currentCategoryId),\n            children: \"Delete Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TCtq1JOHFrU6kWvWuNrEAZi+uEU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getCategories","createCategory","updateCategory","deleteCategoryById","CircularMeter","Modal","AddCategoryModal","EditCategoryModal","jsxDEV","_jsxDEV","App","_s","showAddCategoryModal","setShowAddCategoryModal","categories","setCategories","showAddModal","setShowAddModal","showSubtractModal","setShowSubtractModal","showEditModal","setShowEditModal","currentCategoryId","setCurrentCategoryId","totalMaxValue","setTotalMaxValue","totalValue","setTotalValue","fetchCategories","data","error","console","newValues","reduce","accumulator","category","value","newTotal","maxValue","handleOpenAddCategoryModal","handleCloseAddCategoryModal","addCategory","name","newCategory","handleOpenAddModal","id","handleCloseAddModal","handleOpenSubtractModal","handleCloseSubtractModal","handleOpenEditModal","handleCloseEditModal","editAmount","addValue","find","updatedCategory","map","deleteCategory","filter","changeValues","limit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","show","handleClose","onSubmit","e","preventDefault","parseFloat","target","reset","type","min","max","step","required","subtractValue","_c","$RefreshReg$"],"sources":["/Users/alfredoleano/Desktop/Projects/finance-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getCategories, createCategory, updateCategory, deleteCategoryById } from './api'\nimport './App.css';\nimport CircularMeter from './CircularMeter';\nimport Modal from './Modal';\nimport AddCategoryModal from './AddCategoryModal';\nimport EditCategoryModal from './EditCategoryModal';\n\nfunction App() {\n  // State to manage the visibility of the add category modal\n  const [showAddCategoryModal, setShowAddCategoryModal] = useState(false);\n  \n  // State to manage the list of categories\n  const [categories, setCategories] = useState([]);\n  \n  // State to manage the visibility of the add amount modal\n  const [showAddModal, setShowAddModal] = useState(false);\n  \n  // State to manage the visibility of the subtract amount modal\n  const [showSubtractModal, setShowSubtractModal] = useState(false);\n\n  // State to manage the visibility of the edit modal\n  const [showEditModal, setShowEditModal] = useState(false);\n  \n  // State to keep track of the current category id when adding an amount\n  const [currentCategoryId, setCurrentCategoryId] = useState(null);\n\n  // State to keep track of total value\n  const [totalMaxValue, setTotalMaxValue] = useState(0);\n\n  // State to keep track of value\n  const [totalValue, setTotalValue] = useState(0);\n\n  // Get data from database and set it into categories\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const data = await getCategories();\n        setCategories(data);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n\n    fetchCategories();\n  }, []);\n\n  // Calculate the new total values when categories is updated\n  useEffect(() => {\n    // Calculating new value\n    const newValues = categories.reduce((accumulator, category) => {\n      return accumulator + category.value;\n    },0);\n\n    setTotalValue(newValues);\n\n    // Calculating new total value\n    const newTotal = categories.reduce((accumulator, category) => {\n      return accumulator + category.maxValue;\n    }, 0);\n    \n    setTotalMaxValue(newTotal);\n  }, [categories]);\n\n  // Function to open the add category modal\n  const handleOpenAddCategoryModal = () => {\n    setShowAddCategoryModal(true);\n  };\n\n  // Function to close the add category modal\n  const handleCloseAddCategoryModal = () => {\n    setShowAddCategoryModal(false);\n  };\n\n  // Function to add a new category\n  const addCategory = async (name, maxValue) => {\n    try{\n      // Create a new category object (id is not included bc that is generated in the backend)\n      const newCategory = { name, value: 0, maxValue};\n\n      // Send the request to create a new category in the backend\n      const data = await createCategory(newCategory);\n\n      // Update the local categories state with the new category\n      setCategories([...categories, data]);\n\n      // Close the add category modal\n      handleCloseAddCategoryModal();\n    } catch (error) {\n      // Handle any errors that occurred during the API call\n      console.error('Error adding category:', error);\n    }\n  };\n\n  // Function to open the add amount modal\n  const handleOpenAddModal = (id) => {\n    setShowAddModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the add amount modal\n  const handleCloseAddModal = () => {\n    setShowAddModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to open the subtract amount modal\n  const handleOpenSubtractModal = (id) => {\n    setShowSubtractModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the subtract amount modal\n  const handleCloseSubtractModal = () => {\n    setShowSubtractModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to open the edit amount modal\n  const handleOpenEditModal = (id) => {\n    setShowEditModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the edit amount modal\n  const handleCloseEditModal = () => {\n    setShowEditModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to edit amount in category budget\n  const editAmount = async (id, addValue) => {\n    try {\n      // Find the category to be updated\n      const category = categories.find(category => category.id === id);\n\n      // Create a new object with the updated value\n      const updatedCategory = {\n        ...category,\n        value: category.value + addValue\n      };\n\n      // Call the API function to update the category in the backend\n      const data = await updateCategory(id, updatedCategory);\n\n      // Update the categories state with the response data\n      setCategories(categories.map(category => \n        category.id === id ? data : category\n      ));\n\n      // Close the modals\n      handleCloseAddModal();\n      handleCloseSubtractModal();\n    } catch (error) {\n      console.error('Error updating category:', error);\n    }\n  };\n\n  // Function to delete a category\n  const deleteCategory = async (id) => {\n    try {\n      // Call the API to delete the category in the backend\n      await deleteCategoryById(id);\n\n      // Delete the category with the matching id in the categories state\n      setCategories(categories.filter(category => category.id !== id));\n\n      // Close edit modal\n      handleCloseEditModal();\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  }\n\n  // Function to change all the values of a category\n  const changeValues = async (id, limit, value) => {\n    try {\n      // Find the category by id\n      const category = categories.find(category => category.id === id);\n\n      // Create the updated category object\n      const updatedCategory = { \n        ...category,\n        value: value,\n        maxValue: limit\n      }\n\n      // Send the updated category to the backend\n      await updateCategory(id, updatedCategory);\n\n      // Update the categories state, replaces the category with the updated values if the id matches\n      setCategories(categories.map(category => \n        category.id === id ? updatedCategory : category\n      ));\n\n      // Close the edit modal\n      handleCloseEditModal();\n    } catch (error) {\n      console.error('Error changing values:', error);\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <h1>Conscience Spending Plan</h1>\n\n      <div className='category'>\n        <div className='category-item'>\n          <h2>Total</h2>\n          <CircularMeter value={totalValue} maxValue={totalMaxValue} />\n          <p>${totalValue} / {totalMaxValue}</p>\n        </div>\n\n        {categories.map((category) => (\n          <div key={category.id} className='category-item'>\n            <h2>{category.name}</h2>\n            <CircularMeter value={category.value} maxValue={category.maxValue} />\n            <p>${category.value} / {category.maxValue}</p>\n            <div className='btn-container'>\n              <div className='plus-minus'>\n              <button onClick={() => handleOpenSubtractModal(category.id)}>-</button>\n              <button onClick={() => handleOpenAddModal(category.id)}>+</button>\n              </div>\n              <button className='btn-edit' onClick={() => handleOpenEditModal(category.id)}>Edit</button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <button onClick={handleOpenAddCategoryModal} className='add-category'>Add Category</button>\n\n      <AddCategoryModal show={handleOpenAddCategoryModal} handleClose={handleCloseAddCategoryModal} addCategory={addCategory} />\n      <EditCategoryModal show={handleOpenEditModal} handleClose={handleCloseEditModal} changeValues={changeValues} deleteCategory={deleteCategory} currentCategoryId={currentCategoryId}/>\n\n      {/* Modal for adding an amount to a category */}\n      <Modal show={showAddModal} handleClose={handleCloseAddModal}>\n        <h2>Add Amount</h2>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          const addValue = parseFloat(e.target.addValue.value); // Get the value to add\n          editAmount(currentCategoryId, addValue);\n          e.target.reset();\n        }}>\n          <div className='info'>\n            <label>\n              Amount: \n              <input type='number' name='addValue' min='0.01' max='100000' step='0.01' required />\n            </label>\n          </div>\n          <div className='modal-btns'>\n            <button type='submit'>Add</button>\n          </div>\n        </form>\n      </Modal>\n\n      {/* Modal for subtracting an amount to a category */}\n      <Modal show={showSubtractModal} handleClose={handleCloseSubtractModal}>\n        <h2>Subtract Amount</h2>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          const subtractValue = parseFloat(e.target.subtractValue.value) * -1; // Get the value to add\n          editAmount(currentCategoryId, subtractValue);\n          e.target.reset();\n        }}>\n          <div className='info'>\n            <label>\n              Amount: \n              <input type='number' name='subtractValue' min='0.01' max='100000' step='0.01' required />\n            </label>\n          </div>\n          <div className='modal-btns'>\n            <button type='submit'>Subtract</button>\n          </div>\n        </form>\n      </Modal>\n\n      {/* Modal for editing a category */}\n      <Modal show={showEditModal} handleClose={handleCloseEditModal}>\n        <h2>Edit Budget</h2>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          const value = parseFloat(e.target.value.value);\n          const limit = parseFloat(e.target.limit.value);\n          changeValues(currentCategoryId, limit, value);\n          e.target.reset();\n        }}>\n          <div className='info'>\n            <label>\n              Budget Limit: \n              <input type='number' name='limit' min='1' max='100000' step='0.01' required />\n            </label>\n            <label>\n              Budget Value:\n              <input type='number' name='value' min='0.01' max='100000' step='0.01' required/>\n            </label>\n          </div>\n          <div className='modal-btns'>\n            <button type='submit'>Confirm Changes</button>\n            <button type='button' onClick={() => deleteCategory(currentCategoryId)}>Delete Category</button>\n          </div>\n        </form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}