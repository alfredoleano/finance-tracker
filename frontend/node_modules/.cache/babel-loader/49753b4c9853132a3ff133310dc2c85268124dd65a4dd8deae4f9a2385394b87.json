{"ast":null,"code":"var _jsxFileName = \"/Users/alfredoleano/Desktop/Projects/finance-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useCategories from './useCategories';\nimport useModals from './useModals';\nimport './App.css';\nimport CircularMeter from './CircularMeter';\nimport Modal from './Modal';\nimport AddCategoryModal from './AddCategoryModal';\nimport EditCategoryModal from './EditCategoryModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    showAddCategoryModal,\n    showAddModal,\n    showSubtractModal,\n    showEditModal,\n    currentCategoryId,\n    handleOpenAddCategoryModal,\n    handleCloseAddCategoryModal,\n    handleOpenAddModal,\n    handleCloseAddModal,\n    handleOpenSubtractModal,\n    handleCloseSubtractModal,\n    handleOpenEditModal,\n    handleCloseEditModal\n  } = useModals();\n  const {\n    categories,\n    totalMaxValue,\n    totalValue,\n    addCategory,\n    changeValues,\n    deleteCategory,\n    editAmount\n  } = useCategories();\n  // State to manage the visibility of the add category modal\n  // const [showAddCategoryModal, setShowAddCategoryModal] = useState(false);\n\n  // State to manage the list of categories\n  // const [categories, setCategories] = useState([]);\n\n  // // State to manage the visibility of the add amount modal\n  // const [showAddModal, setShowAddModal] = useState(false);\n\n  // // State to manage the visibility of the subtract amount modal\n  // const [showSubtractModal, setShowSubtractModal] = useState(false);\n\n  // // State to manage the visibility of the edit modal\n  // const [showEditModal, setShowEditModal] = useState(false);\n\n  // // State to keep track of the current category id when adding an amount\n  // const [currentCategoryId, setCurrentCategoryId] = useState(null);\n\n  // State to keep track of total value\n  //const [totalMaxValue, setTotalMaxValue] = useState(0);\n\n  // // State to keep track of value\n  // const [totalValue, setTotalValue] = useState(0);\n\n  // // Get data from database and set it into categories\n  // useEffect(() => {\n  //   const fetchCategories = async () => {\n  //     try {\n  //       const data = await getCategories();\n  //       setCategories(data);\n  //     } catch (error) {\n  //       console.error('Error fetching categories:', error);\n  //     }\n  //   };\n\n  //   fetchCategories();\n  // }, []);\n\n  // // Calculate the new total values when categories is updated\n  // useEffect(() => {\n  //   // Calculating new value\n  //   const newValues = categories.reduce((accumulator, category) => {\n  //     return accumulator + category.value;\n  //   },0);\n\n  //   setTotalValue(newValues);\n\n  //   // Calculating new total value\n  //   const newTotal = categories.reduce((accumulator, category) => {\n  //     return accumulator + category.maxValue;\n  //   }, 0);\n\n  //   setTotalMaxValue(newTotal);\n  // }, [categories]);\n\n  // // Function to open the add category modal\n  // const handleOpenAddCategoryModal = () => {\n  //   setShowAddCategoryModal(true);\n  // };\n\n  // // Function to close the add category modal\n  // const handleCloseAddCategoryModal = () => {\n  //   setShowAddCategoryModal(false);\n  // };\n\n  // // Function to add a new category\n  // const addCategory = async (name, maxValue) => {\n  //   try{\n  //     // Create a new category object (id is not included bc that is generated in the backend)\n  //     const newCategory = { name, value: 0, maxValue};\n\n  //     // Send the request to create a new category in the backend\n  //     const data = await createCategory(newCategory);\n\n  //     // Update the local categories state with the new category\n  //     setCategories([...categories, data]);\n\n  //     // Close the add category modal\n  //     handleCloseAddCategoryModal();\n  //   } catch (error) {\n  //     // Handle any errors that occurred during the API call\n  //     console.error('Error adding category:', error);\n  //   }\n  // };\n\n  // // Function to open the add amount modal\n  // const handleOpenAddModal = (id) => {\n  //   setShowAddModal(true);\n  //   setCurrentCategoryId(id);\n  // };\n\n  // // Function to close the add amount modal\n  // const handleCloseAddModal = () => {\n  //   setShowAddModal(false);\n  //   setCurrentCategoryId(null);\n  // };\n\n  // // Function to open the subtract amount modal\n  // const handleOpenSubtractModal = (id) => {\n  //   setShowSubtractModal(true);\n  //   setCurrentCategoryId(id);\n  // };\n\n  // // Function to close the subtract amount modal\n  // const handleCloseSubtractModal = () => {\n  //   setShowSubtractModal(false);\n  //   setCurrentCategoryId(null);\n  // };\n\n  // // Function to open the edit amount modal\n  // const handleOpenEditModal = (id) => {\n  //   setShowEditModal(true);\n  //   setCurrentCategoryId(id);\n  // };\n\n  // // Function to close the edit amount modal\n  // const handleCloseEditModal = () => {\n  //   setShowEditModal(false);\n  //   setCurrentCategoryId(null);\n  // };\n\n  // // Function to edit amount in category budget\n  // const editAmount = async (id, addValue) => {\n  //   try {\n  //     // Find the category to be updated\n  //     const category = categories.find(category => category.id === id);\n\n  //     // Create a new object with the updated value\n  //     const updatedCategory = {\n  //       ...category,\n  //       value: category.value + addValue\n  //     };\n\n  //     // Call the API function to update the category in the backend\n  //     const data = await updateCategory(id, updatedCategory);\n\n  //     // Update the categories state with the response data\n  //     setCategories(categories.map(category => \n  //       category.id === id ? data : category\n  //     ));\n\n  //     // Close the modals\n  //     handleCloseAddModal();\n  //     handleCloseSubtractModal();\n  //   } catch (error) {\n  //     console.error('Error updating category:', error);\n  //   }\n  // };\n\n  // // Function to delete a category\n  // const deleteCategory = async (id) => {\n  //   try {\n  //     // Call the API to delete the category in the backend\n  //     await deleteCategoryById(id);\n\n  //     // Delete the category with the matching id in the categories state\n  //     setCategories(categories.filter(category => category.id !== id));\n\n  //     // Close edit modal\n  //     handleCloseEditModal();\n  //   } catch (error) {\n  //     console.error('Error deleting category:', error);\n  //   }\n  // }\n\n  // // Function to change all the values of a category\n  // const changeValues = async (id, limit, value) => {\n  //   try {\n  //     // Find the category by id\n  //     const category = categories.find(category => category.id === id);\n\n  //     // Create the updated category object\n  //     const updatedCategory = { \n  //       ...category,\n  //       value: value,\n  //       maxValue: limit\n  //     }\n\n  //     // Send the updated category to the backend\n  //     await updateCategory(id, updatedCategory);\n\n  //     // Update the categories state, replaces the category with the updated values if the id matches\n  //     setCategories(categories.map(category => \n  //       category.id === id ? updatedCategory : category\n  //     ));\n\n  //     // Close the edit modal\n  //     handleCloseEditModal();\n  //   } catch (error) {\n  //     console.error('Error changing values:', error);\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conscience Spending Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CircularMeter, {\n          value: totalValue,\n          maxValue: totalMaxValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalValue, \" / \", totalMaxValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CircularMeter, {\n          value: category.value,\n          maxValue: category.maxValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", category.value, \" / \", category.maxValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plus-minus\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleOpenSubtractModal(category.id),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleOpenAddModal(category.id),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-edit\",\n            onClick: () => handleOpenEditModal(category.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenAddCategoryModal,\n      className: \"add-category\",\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCategoryModal, {\n      show: showAddCategoryModal,\n      handleClose: handleCloseAddCategoryModal,\n      addCategory: addCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditCategoryModal, {\n      show: showEditModal,\n      handleClose: handleCloseEditModal,\n      changeValues: changeValues,\n      deleteCategory: deleteCategory,\n      currentCategoryId: currentCategoryId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAddModal,\n      handleClose: handleCloseAddModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          const addValue = parseFloat(e.target.addValue.value); // Get the value to add\n          editAmount(currentCategoryId, addValue);\n          e.target.reset();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"addValue\",\n              min: \"0.01\",\n              max: \"100000\",\n              step: \"0.01\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-btns\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showSubtractModal,\n      handleClose: handleCloseSubtractModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Subtract Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          const subtractValue = parseFloat(e.target.subtractValue.value) * -1; // Get the value to add\n          editAmount(currentCategoryId, subtractValue);\n          e.target.reset();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"subtractValue\",\n              min: \"0.01\",\n              max: \"100000\",\n              step: \"0.01\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-btns\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Subtract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qZMqV0eoBLEwObKpWKjXKSt1iwI=\", false, function () {\n  return [useModals, useCategories];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCategories","useModals","CircularMeter","Modal","AddCategoryModal","EditCategoryModal","jsxDEV","_jsxDEV","App","_s","showAddCategoryModal","showAddModal","showSubtractModal","showEditModal","currentCategoryId","handleOpenAddCategoryModal","handleCloseAddCategoryModal","handleOpenAddModal","handleCloseAddModal","handleOpenSubtractModal","handleCloseSubtractModal","handleOpenEditModal","handleCloseEditModal","categories","totalMaxValue","totalValue","addCategory","changeValues","deleteCategory","editAmount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","maxValue","map","category","name","onClick","id","show","handleClose","onSubmit","e","preventDefault","addValue","parseFloat","target","reset","type","min","max","step","required","subtractValue","_c","$RefreshReg$"],"sources":["/Users/alfredoleano/Desktop/Projects/finance-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useCategories from './useCategories';\nimport useModals from './useModals';\nimport './App.css';\nimport CircularMeter from './CircularMeter';\nimport Modal from './Modal';\nimport AddCategoryModal from './AddCategoryModal';\nimport EditCategoryModal from './EditCategoryModal';\n\nfunction App() {\n  const {\n    showAddCategoryModal,\n    showAddModal,\n    showSubtractModal,\n    showEditModal,\n    currentCategoryId,\n    handleOpenAddCategoryModal,\n    handleCloseAddCategoryModal,\n    handleOpenAddModal,\n    handleCloseAddModal,\n    handleOpenSubtractModal,\n    handleCloseSubtractModal,\n    handleOpenEditModal,\n    handleCloseEditModal\n  } = useModals();\n\n  const {\n    categories,\n    totalMaxValue,\n    totalValue,\n    addCategory,\n    changeValues,\n    deleteCategory,\n    editAmount\n  } = useCategories();\n  // State to manage the visibility of the add category modal\n  // const [showAddCategoryModal, setShowAddCategoryModal] = useState(false);\n  \n  // State to manage the list of categories\n  // const [categories, setCategories] = useState([]);\n  \n  // // State to manage the visibility of the add amount modal\n  // const [showAddModal, setShowAddModal] = useState(false);\n  \n  // // State to manage the visibility of the subtract amount modal\n  // const [showSubtractModal, setShowSubtractModal] = useState(false);\n\n  // // State to manage the visibility of the edit modal\n  // const [showEditModal, setShowEditModal] = useState(false);\n  \n  // // State to keep track of the current category id when adding an amount\n  // const [currentCategoryId, setCurrentCategoryId] = useState(null);\n\n  // State to keep track of total value\n  //const [totalMaxValue, setTotalMaxValue] = useState(0);\n\n  // // State to keep track of value\n  // const [totalValue, setTotalValue] = useState(0);\n\n  // // Get data from database and set it into categories\n  // useEffect(() => {\n  //   const fetchCategories = async () => {\n  //     try {\n  //       const data = await getCategories();\n  //       setCategories(data);\n  //     } catch (error) {\n  //       console.error('Error fetching categories:', error);\n  //     }\n  //   };\n\n  //   fetchCategories();\n  // }, []);\n\n  // // Calculate the new total values when categories is updated\n  // useEffect(() => {\n  //   // Calculating new value\n  //   const newValues = categories.reduce((accumulator, category) => {\n  //     return accumulator + category.value;\n  //   },0);\n\n  //   setTotalValue(newValues);\n\n  //   // Calculating new total value\n  //   const newTotal = categories.reduce((accumulator, category) => {\n  //     return accumulator + category.maxValue;\n  //   }, 0);\n    \n  //   setTotalMaxValue(newTotal);\n  // }, [categories]);\n\n  // // Function to open the add category modal\n  // const handleOpenAddCategoryModal = () => {\n  //   setShowAddCategoryModal(true);\n  // };\n\n  // // Function to close the add category modal\n  // const handleCloseAddCategoryModal = () => {\n  //   setShowAddCategoryModal(false);\n  // };\n\n  // // Function to add a new category\n  // const addCategory = async (name, maxValue) => {\n  //   try{\n  //     // Create a new category object (id is not included bc that is generated in the backend)\n  //     const newCategory = { name, value: 0, maxValue};\n\n  //     // Send the request to create a new category in the backend\n  //     const data = await createCategory(newCategory);\n\n  //     // Update the local categories state with the new category\n  //     setCategories([...categories, data]);\n\n  //     // Close the add category modal\n  //     handleCloseAddCategoryModal();\n  //   } catch (error) {\n  //     // Handle any errors that occurred during the API call\n  //     console.error('Error adding category:', error);\n  //   }\n  // };\n\n  // // Function to open the add amount modal\n  // const handleOpenAddModal = (id) => {\n  //   setShowAddModal(true);\n  //   setCurrentCategoryId(id);\n  // };\n\n  // // Function to close the add amount modal\n  // const handleCloseAddModal = () => {\n  //   setShowAddModal(false);\n  //   setCurrentCategoryId(null);\n  // };\n\n  // // Function to open the subtract amount modal\n  // const handleOpenSubtractModal = (id) => {\n  //   setShowSubtractModal(true);\n  //   setCurrentCategoryId(id);\n  // };\n\n  // // Function to close the subtract amount modal\n  // const handleCloseSubtractModal = () => {\n  //   setShowSubtractModal(false);\n  //   setCurrentCategoryId(null);\n  // };\n\n  // // Function to open the edit amount modal\n  // const handleOpenEditModal = (id) => {\n  //   setShowEditModal(true);\n  //   setCurrentCategoryId(id);\n  // };\n\n  // // Function to close the edit amount modal\n  // const handleCloseEditModal = () => {\n  //   setShowEditModal(false);\n  //   setCurrentCategoryId(null);\n  // };\n\n  // // Function to edit amount in category budget\n  // const editAmount = async (id, addValue) => {\n  //   try {\n  //     // Find the category to be updated\n  //     const category = categories.find(category => category.id === id);\n\n  //     // Create a new object with the updated value\n  //     const updatedCategory = {\n  //       ...category,\n  //       value: category.value + addValue\n  //     };\n\n  //     // Call the API function to update the category in the backend\n  //     const data = await updateCategory(id, updatedCategory);\n\n  //     // Update the categories state with the response data\n  //     setCategories(categories.map(category => \n  //       category.id === id ? data : category\n  //     ));\n\n  //     // Close the modals\n  //     handleCloseAddModal();\n  //     handleCloseSubtractModal();\n  //   } catch (error) {\n  //     console.error('Error updating category:', error);\n  //   }\n  // };\n\n  // // Function to delete a category\n  // const deleteCategory = async (id) => {\n  //   try {\n  //     // Call the API to delete the category in the backend\n  //     await deleteCategoryById(id);\n\n  //     // Delete the category with the matching id in the categories state\n  //     setCategories(categories.filter(category => category.id !== id));\n\n  //     // Close edit modal\n  //     handleCloseEditModal();\n  //   } catch (error) {\n  //     console.error('Error deleting category:', error);\n  //   }\n  // }\n\n  // // Function to change all the values of a category\n  // const changeValues = async (id, limit, value) => {\n  //   try {\n  //     // Find the category by id\n  //     const category = categories.find(category => category.id === id);\n\n  //     // Create the updated category object\n  //     const updatedCategory = { \n  //       ...category,\n  //       value: value,\n  //       maxValue: limit\n  //     }\n\n  //     // Send the updated category to the backend\n  //     await updateCategory(id, updatedCategory);\n\n  //     // Update the categories state, replaces the category with the updated values if the id matches\n  //     setCategories(categories.map(category => \n  //       category.id === id ? updatedCategory : category\n  //     ));\n\n  //     // Close the edit modal\n  //     handleCloseEditModal();\n  //   } catch (error) {\n  //     console.error('Error changing values:', error);\n  //   }\n  // }\n  \n  return (\n    <div className=\"App\">\n      <h1>Conscience Spending Plan</h1>\n\n      <div className='category'>\n        <div className='category-item'>\n          <h2>Total</h2>\n          <CircularMeter value={totalValue} maxValue={totalMaxValue} />\n          <p>${totalValue} / {totalMaxValue}</p>\n        </div>\n\n        {categories.map((category) => (\n          <div key={category.id} className='category-item'>\n            <h2>{category.name}</h2>\n            <CircularMeter value={category.value} maxValue={category.maxValue} />\n            <p>${category.value} / {category.maxValue}</p>\n            <div className='btn-container'>\n              <div className='plus-minus'>\n              <button onClick={() => handleOpenSubtractModal(category.id)}>-</button>\n              <button onClick={() => handleOpenAddModal(category.id)}>+</button>\n              </div>\n              <button className='btn-edit' onClick={() => handleOpenEditModal(category.id)}>Edit</button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <button onClick={handleOpenAddCategoryModal} className='add-category'>Add Category</button>\n\n      <AddCategoryModal show={showAddCategoryModal} handleClose={handleCloseAddCategoryModal} addCategory={addCategory} />\n      <EditCategoryModal show={showEditModal} handleClose={handleCloseEditModal} changeValues={changeValues} deleteCategory={deleteCategory} currentCategoryId={currentCategoryId}/>\n\n      {/* Modal for adding an amount to a category */}\n      <Modal show={showAddModal} handleClose={handleCloseAddModal}>\n        <h2>Add Amount</h2>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          const addValue = parseFloat(e.target.addValue.value); // Get the value to add\n          editAmount(currentCategoryId, addValue);\n          e.target.reset();\n        }}>\n          <div className='info'>\n            <label>\n              Amount: \n              <input type='number' name='addValue' min='0.01' max='100000' step='0.01' required />\n            </label>\n          </div>\n          <div className='modal-btns'>\n            <button type='submit'>Add</button>\n          </div>\n        </form>\n      </Modal>\n\n      {/* Modal for subtracting an amount to a category */}\n      <Modal show={showSubtractModal} handleClose={handleCloseSubtractModal}>\n        <h2>Subtract Amount</h2>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          const subtractValue = parseFloat(e.target.subtractValue.value) * -1; // Get the value to add\n          editAmount(currentCategoryId, subtractValue);\n          e.target.reset();\n        }}>\n          <div className='info'>\n            <label>\n              Amount: \n              <input type='number' name='subtractValue' min='0.01' max='100000' step='0.01' required />\n            </label>\n          </div>\n          <div className='modal-btns'>\n            <button type='submit'>Subtract</button>\n          </div>\n        </form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}