{"ast":null,"code":"var _jsxFileName = \"/Users/alfredoleano/Desktop/Projects/finance-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport CircularMeter from './CircularMeter';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to manage the visibility of the add category modal\n  const [showModal, setShowModal] = useState(false);\n\n  // State to manage the list of categories\n  const [categories, setCategories] = useState([]);\n\n  // State to manage the visibility of the add amount modal\n  const [showAddModal, setShowAddModal] = useState(false);\n\n  // State to keep track of the current category id when adding an amount\n  const [currentCategoryId, setCurrentCategoryId] = useState(null);\n\n  // Function to open the add category modal\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  // Function to close the add category modal\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  // Function to add a new category\n  const addCategory = (name, maxValue) => {\n    // Create a new category object\n    const newCategory = {\n      id: categories.length + 1,\n      name,\n      value: 0,\n      maxValue\n    };\n\n    // Update the categories state with the new category\n    setCategories([...categories, newCategory]);\n\n    // Close the add category modal\n    setShowModal(false);\n  };\n\n  // Function to open the add amount modal\n  const handleOpenAddModal = id => {\n    setShowAddModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the add amount modal\n  const handleCloseAddModal = () => {\n    setShowAddModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to edit amount in category budget\n  const editAmount = (id, addValue) => {\n    // Update the categories state immutably using map\n    setCategories(categories.map(category =>\n    // Check if the current category's ID matches the ID passed to the function\n    category.id === id\n    // If they match, create a new object with the updated value\n    ? {\n      ...category,\n      value: category.value + addValue\n    }\n    // If they don't match, return the category object unchanged\n    : category));\n\n    // Close the add amount modal\n    setShowAddModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conscience Spending Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category\",\n      children: [/*#__PURE__*/_jsxDEV(CircularMeter, {\n        value: 25,\n        maxValue: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CircularMeter, {\n          value: category.value,\n          maxValue: category.maxValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", category.value, \" / \", category.maxValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOpenAddModal(category.id),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenModal,\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      handleClose: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault(); // Prevent the default form submission behavior\n          const name = e.target.elements.categoryName.value; // Get the name from the input field\n          const maxValue = parseInt(e.target.elements.valueInput.value); // Get the value from the input field\n          addCategory(name, maxValue); // Add new category\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"categoryName\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Budget:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"valueInput\",\n            min: \"1\",\n            max: \"100000\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAddModal,\n      handleClose: handleCloseAddModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          const addValue = parseFloat(e.target.addValue.value); // Get the value to add\n          editAmount(currentCategoryId, addValue);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"addValue\",\n            min: \"0.01\",\n            max: \"100000\",\n            step: \"0.01\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1yPARTHQ+hnVT+LFYwe7Bh95Ffo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CircularMeter","Modal","jsxDEV","_jsxDEV","App","_s","showModal","setShowModal","categories","setCategories","showAddModal","setShowAddModal","currentCategoryId","setCurrentCategoryId","handleOpenModal","handleCloseModal","addCategory","name","maxValue","newCategory","id","length","value","handleOpenAddModal","handleCloseAddModal","editAmount","addValue","map","category","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","show","handleClose","onSubmit","e","preventDefault","target","elements","categoryName","parseInt","valueInput","type","required","min","max","parseFloat","step","_c","$RefreshReg$"],"sources":["/Users/alfredoleano/Desktop/Projects/finance-tracker/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport CircularMeter from './CircularMeter';\nimport Modal from './Modal';\n\nfunction App() {\n  // State to manage the visibility of the add category modal\n  const [showModal, setShowModal] = useState(false);\n  \n  // State to manage the list of categories\n  const [categories, setCategories] = useState([]);\n  \n  // State to manage the visibility of the add amount modal\n  const [showAddModal, setShowAddModal] = useState(false);\n  \n  // State to keep track of the current category id when adding an amount\n  const [currentCategoryId, setCurrentCategoryId] = useState(null);\n\n  // Function to open the add category modal\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  // Function to close the add category modal\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  // Function to add a new category\n  const addCategory = (name, maxValue) => {\n    // Create a new category object\n    const newCategory = { id: categories.length + 1, name, value: 0, maxValue };\n    \n    // Update the categories state with the new category\n    setCategories([...categories, newCategory]);\n    \n    // Close the add category modal\n    setShowModal(false);\n  };\n\n  // Function to open the add amount modal\n  const handleOpenAddModal = (id) => {\n    setShowAddModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the add amount modal\n  const handleCloseAddModal = () => {\n    setShowAddModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to edit amount in category budget\n  const editAmount = (id, addValue) => {\n    // Update the categories state immutably using map\n    setCategories(categories.map(category => \n      // Check if the current category's ID matches the ID passed to the function\n      category.id === id\n      // If they match, create a new object with the updated value\n      ? {...category, value: category.value + addValue }\n      // If they don't match, return the category object unchanged\n      : category\n    ));\n\n    // Close the add amount modal\n    setShowAddModal(false);\n  }\n  \n  return (\n    <div className=\"App\">\n      <h1>Conscience Spending Plan</h1>\n\n      <div className='category'>\n        <CircularMeter value={25} maxValue={100} />\n\n        {categories.map((category) => (\n          <div key={category.id} className='category-item'>\n            <h2>{category.name}</h2>\n            <CircularMeter value={category.value} maxValue={category.maxValue} />\n            <p>${category.value} / {category.maxValue}</p>\n            <div>\n              <button>Edit Amount</button>\n              <button onClick={() => handleOpenAddModal(category.id)}>+</button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <button onClick={handleOpenModal}>Add Category</button>\n\n      {/* Modal for adding a new category */}\n      <Modal show={showModal} handleClose={handleCloseModal}>\n        <h2>Add New Category</h2>\n        <form onSubmit={(e) => {\n          e.preventDefault(); // Prevent the default form submission behavior\n          const name = e.target.elements.categoryName.value; // Get the name from the input field\n          const maxValue = parseInt(e.target.elements.valueInput.value); // Get the value from the input field\n          addCategory(name, maxValue); // Add new category\n        }}>\n          <label>\n            Name: \n            <input type='text' name='categoryName' required />\n          </label>\n          <label>\n            Budget: \n            <input type='number' name='valueInput' min='1' max='100000' required />\n          </label>\n          <button type=\"submit\">Add</button>\n        </form>\n      </Modal>\n\n      {/* Modal for adding an amount to a category */}\n      <Modal show={showAddModal} handleClose={handleCloseAddModal}>\n        <h2>Add Amount</h2>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          const addValue = parseFloat(e.target.addValue.value); // Get the value to add\n          editAmount(currentCategoryId, addValue);\n        }}>\n          <label>\n            Amount: \n            <input type='number' name='addValue' min='0.01' max='100000' step='0.01' required />\n          </label>\n          <button type='submit'>Add</button>\n        </form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}