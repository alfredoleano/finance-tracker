{"ast":null,"code":"var _jsxFileName = \"/Users/alfredoleano/Desktop/Projects/finance-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport CircularMeter from './CircularMeter';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to manage the visibility of the add category modal\n  const [showModal, setShowModal] = useState(false);\n\n  // State to manage the list of categories\n  const [categories, setCategories] = useState([]);\n\n  // State to manage the visibility of the add amount modal\n  const [showAddModal, setShowAddModal] = useState(false);\n\n  // State to manage the visibility of the subtract amount modal\n  const [showSubtractModal, setShowSubtractModal] = useState(false);\n\n  // State to manage the visibility of the edit modal\n  const [showEditModal, setShowEditModal] = useState(false);\n\n  // State to keep track of the current category id when adding an amount\n  const [currentCategoryId, setCurrentCategoryId] = useState(null);\n\n  // State to keep track of total value\n  const [totalMaxValue, setTotalMaxValue] = useState(0);\n\n  // State to keep track of value\n  const [totalValue, setTotalValue] = useState(0);\n\n  // Load data from local storage when the component mounts\n  useEffect(() => {\n    const savedCategories = localStorage.getItem('categories');\n    if (savedCategories) {\n      const parsedCategories = JSON.parse(savedCategories);\n      setCategories(parsedCategories);\n    }\n  }, []);\n\n  // Save data to local storage whenever categories change and calculate updated total values\n  useEffect(() => {\n    // Saving data\n    localStorage.setItem('categories', JSON.stringify(categories));\n\n    // Calculating new value\n    const newValues = categories.reduce((accumulator, category) => {\n      return accumulator + category.value;\n    }, 0);\n    setTotalValue(newValues);\n\n    // Calculating new total value\n    const newTotal = categories.reduce((accumulator, category) => {\n      return accumulator + category.maxValue;\n    }, 0);\n    setTotalMaxValue(newTotal);\n  }, [categories]);\n\n  // Function to open the add category modal\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  // Function to close the add category modal\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  // Function to add a new category\n  const addCategory = (name, maxValue) => {\n    // Create a new category object\n    const newCategory = {\n      id: categories.length + 1,\n      name,\n      value: 0,\n      maxValue\n    };\n\n    // Update the categories state with the new category\n    setCategories([...categories, newCategory]);\n\n    // Close the add category modal\n    setShowModal(false);\n  };\n\n  // Function to open the add amount modal\n  const handleOpenAddModal = id => {\n    setShowAddModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the add amount modal\n  const handleCloseAddModal = () => {\n    setShowAddModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to open the subtract amount modal\n  const handleOpenSubtractModal = id => {\n    setShowSubtractModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the subtract amount modal\n  const handleCloseSubtractModal = () => {\n    setShowSubtractModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to open the edit amount modal\n  const handleOpenEditModal = id => {\n    setShowEditModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the edit amount modal\n  const handleCloseEditModal = () => {\n    setShowEditModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to edit amount in category budget\n  const editAmount = (id, addValue) => {\n    // Update the categories state immutably using map\n    setCategories(categories.map(category =>\n    // Check if the current category's ID matches the ID passed to the function\n    category.id === id\n    // If they match, create a new object with the updated value\n    ? {\n      ...category,\n      value: category.value + addValue\n    }\n    // If they don't match, return the category object unchanged\n    : category));\n\n    // Close the add amount modal\n    setShowAddModal(false);\n\n    // Close the subtract amount modal\n    setShowSubtractModal(false);\n  };\n\n  // Function to delete a category\n  const deleteCategory = id => {\n    setCategories(categories.filter(category => category.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conscience Spending Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CircularMeter, {\n          value: allValues,\n          maxValue: totalValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", allValues, \" / \", totalValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CircularMeter, {\n          value: category.value,\n          maxValue: category.maxValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", category.value, \" / \", category.maxValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plus-minus\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleOpenSubtractModal(category.id),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleOpenAddModal(category.id),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-edit\",\n            onClick: () => handleOpenEditModal(category.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenModal,\n      className: \"add-category\",\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      handleClose: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault(); // Prevent the default form submission behavior\n          const name = e.target.elements.categoryName.value; // Get the name from the input field\n          const maxValue = parseInt(e.target.elements.valueInput.value); // Get the value from the input field\n          addCategory(name, maxValue); // Add new category\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"categoryName\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Budget:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"valueInput\",\n            min: \"1\",\n            max: \"100000\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAddModal,\n      handleClose: handleCloseAddModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          const addValue = parseFloat(e.target.addValue.value); // Get the value to add\n          editAmount(currentCategoryId, addValue);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"addValue\",\n              min: \"0.01\",\n              max: \"100000\",\n              step: \"0.01\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-btns\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showSubtractModal,\n      handleClose: handleCloseSubtractModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Subtract Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          const subtractValue = parseFloat(e.target.subtractValue.value) * -1; // Get the value to add\n          editAmount(currentCategoryId, subtractValue);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"subtractValue\",\n              min: \"0.01\",\n              max: \"100000\",\n              step: \"0.01\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-btns\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Subtract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showEditModal,\n      handleClose: handleCloseEditModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          const subtractValue = parseFloat(e.target.subtractValue.value) * -1; // Get the value to add\n          editAmount(currentCategoryId, subtractValue);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Budget Limit:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"limit\",\n              min: \"1\",\n              max: \"100000\",\n              step: \"0.01\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Budget Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"value\",\n              min: \"0.01\",\n              max: \"100000\",\n              step: \"0.01\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Confirm Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => deleteCategory(currentCategoryId),\n            children: \"Delete Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"++Jx9cRVzRhlyOO1fJ3TFo16Z7A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CircularMeter","Modal","jsxDEV","_jsxDEV","App","_s","showModal","setShowModal","categories","setCategories","showAddModal","setShowAddModal","showSubtractModal","setShowSubtractModal","showEditModal","setShowEditModal","currentCategoryId","setCurrentCategoryId","totalMaxValue","setTotalMaxValue","totalValue","setTotalValue","savedCategories","localStorage","getItem","parsedCategories","JSON","parse","setItem","stringify","newValues","reduce","accumulator","category","value","newTotal","maxValue","handleOpenModal","handleCloseModal","addCategory","name","newCategory","id","length","handleOpenAddModal","handleCloseAddModal","handleOpenSubtractModal","handleCloseSubtractModal","handleOpenEditModal","handleCloseEditModal","editAmount","addValue","map","deleteCategory","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","allValues","onClick","show","handleClose","onSubmit","e","preventDefault","target","elements","categoryName","parseInt","valueInput","type","required","min","max","parseFloat","step","subtractValue","_c","$RefreshReg$"],"sources":["/Users/alfredoleano/Desktop/Projects/finance-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport CircularMeter from './CircularMeter';\nimport Modal from './Modal';\n\nfunction App() {\n  // State to manage the visibility of the add category modal\n  const [showModal, setShowModal] = useState(false);\n  \n  // State to manage the list of categories\n  const [categories, setCategories] = useState([]);\n  \n  // State to manage the visibility of the add amount modal\n  const [showAddModal, setShowAddModal] = useState(false);\n  \n  // State to manage the visibility of the subtract amount modal\n  const [showSubtractModal, setShowSubtractModal] = useState(false);\n\n  // State to manage the visibility of the edit modal\n  const [showEditModal, setShowEditModal] = useState(false);\n  \n  // State to keep track of the current category id when adding an amount\n  const [currentCategoryId, setCurrentCategoryId] = useState(null);\n\n  // State to keep track of total value\n  const [totalMaxValue, setTotalMaxValue] = useState(0);\n\n  // State to keep track of value\n  const [totalValue, setTotalValue] = useState(0);\n\n  // Load data from local storage when the component mounts\n  useEffect(() => {\n    const savedCategories = localStorage.getItem('categories');\n    if (savedCategories) {\n      const parsedCategories = JSON.parse(savedCategories);\n      setCategories(parsedCategories);\n    }\n  }, []);\n\n  // Save data to local storage whenever categories change and calculate updated total values\n  useEffect(() => {\n    // Saving data\n    localStorage.setItem('categories', JSON.stringify(categories));\n\n    // Calculating new value\n    const newValues = categories.reduce((accumulator, category) => {\n      return accumulator + category.value;\n    },0);\n\n    setTotalValue(newValues);\n\n    // Calculating new total value\n    const newTotal = categories.reduce((accumulator, category) => {\n      return accumulator + category.maxValue;\n    }, 0);\n    \n    setTotalMaxValue(newTotal);\n  }, [categories]);\n\n  // Function to open the add category modal\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  // Function to close the add category modal\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  // Function to add a new category\n  const addCategory = (name, maxValue) => {\n    // Create a new category object\n    const newCategory = { id: categories.length + 1, name, value: 0, maxValue };\n    \n    // Update the categories state with the new category\n    setCategories([...categories, newCategory]);\n    \n    // Close the add category modal\n    setShowModal(false);\n  };\n\n  // Function to open the add amount modal\n  const handleOpenAddModal = (id) => {\n    setShowAddModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the add amount modal\n  const handleCloseAddModal = () => {\n    setShowAddModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to open the subtract amount modal\n  const handleOpenSubtractModal = (id) => {\n    setShowSubtractModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the subtract amount modal\n  const handleCloseSubtractModal = () => {\n    setShowSubtractModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to open the edit amount modal\n  const handleOpenEditModal = (id) => {\n    setShowEditModal(true);\n    setCurrentCategoryId(id);\n  };\n\n  // Function to close the edit amount modal\n  const handleCloseEditModal = () => {\n    setShowEditModal(false);\n    setCurrentCategoryId(null);\n  };\n\n  // Function to edit amount in category budget\n  const editAmount = (id, addValue) => {\n    // Update the categories state immutably using map\n    setCategories(categories.map(category => \n      // Check if the current category's ID matches the ID passed to the function\n      category.id === id\n      // If they match, create a new object with the updated value\n      ? {...category, value: category.value + addValue }\n      // If they don't match, return the category object unchanged\n      : category\n    ));\n\n    // Close the add amount modal\n    setShowAddModal(false);\n\n    // Close the subtract amount modal\n    setShowSubtractModal(false);\n  }\n\n  // Function to delete a category\n  const deleteCategory = (id) => {\n    setCategories(categories.filter(category => category.id !== id));\n  }\n  \n  return (\n    <div className=\"App\">\n      <h1>Conscience Spending Plan</h1>\n\n      <div className='category'>\n        <div className='category-item'>\n          <h2>Total</h2>\n          <CircularMeter value={allValues} maxValue={totalValue} />\n          <p>${allValues} / {totalValue}</p>\n        </div>\n\n        {categories.map((category) => (\n          <div key={category.id} className='category-item'>\n            <h2>{category.name}</h2>\n            <CircularMeter value={category.value} maxValue={category.maxValue} />\n            <p>${category.value} / {category.maxValue}</p>\n            <div className='btn-container'>\n              <div className='plus-minus'>\n              <button onClick={() => handleOpenSubtractModal(category.id)}>-</button>\n              <button onClick={() => handleOpenAddModal(category.id)}>+</button>\n              </div>\n              <button className='btn-edit' onClick={() => handleOpenEditModal(category.id)}>Edit</button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <button onClick={handleOpenModal} className='add-category'>Add Category</button>\n\n      {/* Modal for adding a new category */}\n      <Modal show={showModal} handleClose={handleCloseModal}>\n        <h2>Add New Category</h2>\n        <form onSubmit={(e) => {\n          e.preventDefault(); // Prevent the default form submission behavior\n          const name = e.target.elements.categoryName.value; // Get the name from the input field\n          const maxValue = parseInt(e.target.elements.valueInput.value); // Get the value from the input field\n          addCategory(name, maxValue); // Add new category\n        }}>\n          <label>\n            Name: \n            <input type='text' name='categoryName' required />\n          </label>\n          <label>\n            Budget: \n            <input type='number' name='valueInput' min='1' max='100000' required />\n          </label>\n          <button type=\"submit\">Add</button>\n        </form>\n      </Modal>\n\n      {/* Modal for adding an amount to a category */}\n      <Modal show={showAddModal} handleClose={handleCloseAddModal}>\n        <h2>Add Amount</h2>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          const addValue = parseFloat(e.target.addValue.value); // Get the value to add\n          editAmount(currentCategoryId, addValue);\n        }}>\n          <div className='info'>\n            <label>\n              Amount: \n              <input type='number' name='addValue' min='0.01' max='100000' step='0.01' required />\n            </label>\n          </div>\n          <div className='modal-btns'>\n            <button type='submit'>Add</button>\n          </div>\n        </form>\n      </Modal>\n\n      {/* Modal for subtracting an amount to a category */}\n      <Modal show={showSubtractModal} handleClose={handleCloseSubtractModal}>\n        <h2>Subtract Amount</h2>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          const subtractValue = parseFloat(e.target.subtractValue.value) * -1; // Get the value to add\n          editAmount(currentCategoryId, subtractValue);\n        }}>\n          <div className='info'>\n            <label>\n              Amount: \n              <input type='number' name='subtractValue' min='0.01' max='100000' step='0.01' required />\n            </label>\n          </div>\n          <div className='modal-btns'>\n            <button type='submit'>Subtract</button>\n          </div>\n        </form>\n      </Modal>\n\n      {/* Modal for editing a category */}\n      <Modal show={showEditModal} handleClose={handleCloseEditModal}>\n        <h2>Edit Budget</h2>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          const subtractValue = parseFloat(e.target.subtractValue.value) * -1; // Get the value to add\n          editAmount(currentCategoryId, subtractValue);\n        }}>\n          <div className='info'>\n            <label>\n              Budget Limit: \n              <input type='number' name='limit' min='1' max='100000' step='0.01' required />\n            </label>\n            <label>\n              Budget Value:\n              <input type='number' name='value' min='0.01' max='100000' step='0.01' required/>\n            </label>\n          </div>\n          <div className='modal-btns'>\n            <button type='submit'>Confirm Changes</button>\n            <button type='button' onClick={() => deleteCategory(currentCategoryId)}>Delete Category</button>\n          </div>\n        </form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}